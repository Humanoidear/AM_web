---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

import reviews from "../data/reviews.json";
const formattedReviews = reviews.map((review) => {
  const name = review.name;
  const [firstWord, ...rest] = name.split(" ");
  const formattedName = `<span>${firstWord}</span><br><span class='ml-6'>${rest.join(" ")}</span>`;
  return { ...review, formattedName };
});

import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main class="w-full h-full flex flex-col items-center jusitfy-center">
      <iframe
        src="/html/frame_follow.html"
        class="top-0 left-0 w-full h-full z-0 transition-all absolute"
        transition:name="bg-iframe"></iframe>
      <div class="pt-52 max-w-[1000px] flex flex-row items-center gap-56">
        <div class="w-[calc(100%-13rem)] z-10 relative">
          <h1 class="m-0 text-8xl text-white">contact</h1>
          <p class="mb-3">
            Do you have a project, idea, or just want to get some info? In
            either case, don't hesitate to reach out to me, and we'll figure
            things out.
          </p>
          <p class="flex flex-row items-center gap-1">
            <img
              src="https://unpkg.com/pixelarticons@1.8.1/svg/mail.svg"
              class="h-8 brightness-200 invert"
              alt="Mail Icon"
            /> hola@bcn.am
          </p>
        </div>
        <div class="w-[500px] h-[250px] flex flex-row items-start z-10 relative">
          <div
            class="top-0 right-0 flex flex-row items-center gap-1 z-10 absolute"
          >
            <button
              onclick="modifyReview(-1)"
              class="border-2 border-transparent hover:border-white hover:scale-105 text-white transition-all"
              ><img
                src="https://unpkg.com/pixelarticons@1.8.1/svg/chevron-left.svg"
                class="h-8 brightness-200 invert"
                alt="Previous Review"
              />
            </button>
            <button
              onclick="modifyReview(1)"
              class="border-2 border-transparent hover:border-white hover:scale-105 text-white transition-all"
            >
              <img
                src="https://unpkg.com/pixelarticons@1.8.1/svg/chevron-right.svg"
                class="h-8 brightness-200 invert"
                alt="Next Review"
              />
            </button>
          </div>
          {
            formattedReviews.map((review, index) => (
              <div
                class={`w-[500px] flex flex-col ${index != 0 ? "hidden absolute" : "relative"}`}
                id={`review-${index}`}
              >
                <div class="flex flex-row items-center gap-3">
                  <img
                    src={review.pfp}
                    alt={`${review.name}'s profile picture`}
                    class="h-32"
                  />
                  <div>
                    <h3
                      class="m-0 font-[MGNHumble]"
                      set:html={review.formattedName}
                    />
                    <p class="m-0 opacity-60">{review.career}</p>
                  </div>
                </div>
                <p class="mt-3 flex flex-row items-start gap-1 leading-7">
                  <img
                    src="https://unpkg.com/pixelarticons@1.8.1/svg/chat.svg"
                    class="mt-1 h-6 brightness-200 invert"
                    alt="Quote Icon"
                  />{" "}
                  "{review.quote}"
                </p>
              </div>
            ))
          }
        </div>
      </div>
    </main>
    <Footer />
  </body>
</html>

<script is:inline>
  let currentReview = 0;

  function modifyReview(direction) {
    const reviews = document.querySelectorAll("[id^='review-']");
    const currentElement = reviews[currentReview];
    let slideOutClass = "slide-out-left";
    let slideInClass = "slide-in-right";
    
    if (direction < 0) {
      slideOutClass = "slide-out-right";
      slideInClass = "slide-in-left";
    }

    currentElement.classList.add(slideOutClass);
    currentElement.addEventListener(
      "animationend",
      () => {
        currentElement.classList.add("hidden");
        currentElement.classList.add("absolute");
        currentElement.classList.remove(slideOutClass);
      },
      { once: true }
    );

    currentReview += direction;
    if (currentReview < 0) {
      currentReview = reviews.length - 1;
    } else if (currentReview >= reviews.length) {
      currentReview = 0;
    }

    const nextElement = reviews[currentReview];
    nextElement.classList.remove("hidden");
    nextElement.classList.add(slideInClass);
    nextElement.addEventListener(
      "animationend",
      () => {
        nextElement.classList.remove("absolute");
        nextElement.classList.remove(slideInClass);
      },
      { once: true }
    );
  }
</script>
