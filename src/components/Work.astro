---
import { contentfulClient } from "../lib/contentful";
import type { work } from "../lib/contentful";
import i18next, { t } from "i18next";
import { localizePath } from "astro-i18next";
import Button from "../components/Button.astro";

const entries = await contentfulClient.getEntries<work>({
  content_type: "work",
});

const posts = entries.items.map((item) => {
  const { title, date, slug, type, year, preview } = item.fields;
  return {
    title,
    slug,
    type,
    year,
    preview,
    date: new Date(date).toLocaleDateString(),
  };
});
---

<h1
  class="w-full max-w-[1100px] m-0 text-6xl font-[MGNHumble] text-white text-left flex items-center justify-between translate-y-3"
>
  <span transition:name="work-head-title">{t("header.work")}</span>
  <Button text={t("button.view_work")} href={localizePath("/work")} />
</h1>
<section class="max-w-[1100px] relative">
  <ul
    class="mt-6 grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 grid-rows-2 gap-6"
  >
    {
      posts.slice(0, 7).map((post, index) => (
        <li
          data-type={post.type}
          class={`slideup work-hover hover:shadow-xl shadow-white border-0 hover:border-4 border-white/20 z-0 hover:z-10 relative ${index === 0 ? "col-span-2 row-span-2" : ""}`}
        >
          <a
            class="flex flex-row items-start justify-between gap-5 relative"
            href={localizePath(`/work/${post.slug}/`)}
          >
            <div class="w-full h-full overflow-hidden relative">
              <img
                src={(post.preview as any)?.fields?.file?.url}
                alt={`Thumbnail image for ${post.title}`}
                class="w-full h-full object-cover"
                transition:name={`work-title-${post.title}-image`}
              />
            </div>
          </a>
        </li>
      ))
    }

    <script is:inline data-astro-rerun>
      document.querySelectorAll(".work-hover").forEach((item) => {
        item.addEventListener("mouseenter", (e) => {
          const follower = item.querySelector(".follower");
          if (follower) {
            follower.style.display = "flex";
            follower.style.opacity = "1";
            follower.style.pointerEvents = "none";
            item.style.transition = "transform 0.2s ease";
          }
        });

        item.addEventListener("mousemove", (e) => {
          const follower = item.querySelector(".follower");
          if (follower) {
            const rect = item.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;
            follower.style.left = `${x}px`;
            follower.style.top = `${y}px`;

            const translateX = (x / rect.width - 0.5) * 20;
            const translateY = (y / rect.height - 0.5) * 20;
            item.style.transform = `translate(${translateX}px, ${translateY}px) scale(1.05)`;
            setTimeout(() => {
              item.style.transition = "transform 0s";
            }, 200);
          }
        });

        item.addEventListener("mouseleave", (e) => {
          const follower = item.querySelector(".follower");
          if (follower) {
            follower.style.display = "none";
            follower.style.opacity = "0";
            follower.style.pointerEvents = "none";
            item.style.transition = "transform 0.3s ease";

            // Reset translation
            item.style.transform = "translate(0, 0)";
          }
        });
      });
    </script>
  </ul>
</section>

<style>
  li:hover img {
    transform: scale(1.05);
  }

  .slideup {
    animation: auto linear slideup both;
    animation-timeline: view();
  }

  .slideup:nth-child(1) {
    animation-range: cover 00% cover 50%;
  }

  .slideup:nth-child(2) {
    animation-range: cover 20% cover 50%;
  }

  .slideup:nth-child(3) {
    animation-range: cover 25% cover 50%;
  }

  .slideup:nth-child(4) {
    animation-range: cover 30% cover 50%;
  }

  .slideup:nth-child(5) {
    animation-range: cover 20% cover 50%;
  }

  .slideup:nth-child(6) {
    animation-range: cover 25% cover 50%;
  }

  .slideup:nth-child(7) {
    animation-range: cover 30% cover 50%;
  }

  @keyframes slideup {
    0% {
      opacity: 0;
      transform: scale(0.8) translateY(50px);
    }
    15% {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }
</style>
