---
import { t } from "i18next";
import Button from "../components/Button.astro";

const { blob } = Astro.props;
---

<div class="max-w-[700px] flex md:flex-row flex-col-reverse md:items-center gap-3">
  <img src="/img/blob-1.webp" class={`${blob ? "visible" : "hidden"} w-1/3 -translate-x-32 rotate-180 absolute`}>
  <div class="fadeup md:w-[calc(100%-13rem)] w-[95%] z-10 relative">
    <h1 class="md:translate-x-6 text-[MGNHumble] md:text-7xl text-6xl text-white md:text-right">
      {t("header.about")}
    </h1>
       <p class="md:text-right flex flex-col items-end justify-end relative leading-7 font-medium">
      {t("about.catch")}
      <span class={`${blob} ? "visible" : "hidden"} mt-3 inline-block relative`}>
        <Button text={t("button.more")} href="/about" class="font-medium" nohide />
      </span>
    </p>
  </div>
  <div
    id="hover-space"
    class="fadeup opacity-0 inline-block relative"
    style="animation-delay: 200ms;"
    onmousemove="handleMouseMove(event)"
  >
    <img id="am_face" src="/img/am_face.png" class="w-52 h-52 z-10 relative" />
    <img id="am_bg" src="/img/am_bg.png" class="top-0 w-52 h-52 z-0 absolute" />
  </div>
</div>

<script is:inline>
  function handleMouseMove(event) {
    const hoverSpace = document.getElementById("hover-space");
    const rect = hoverSpace.getBoundingClientRect();
    const x = event.clientX - rect.left;
    const y = event.clientY - rect.top;

    const moveX = (x - rect.width / 2) / 20;
    const moveY = (y - rect.height / 2) / 20;

    const amFace = document.getElementById("am_face");
    const amBg = document.getElementById("am_bg");

    amFace.style.transform = `translate(${moveX}px, ${moveY}px)`;
    amBg.style.transform = `translate(${moveX / 2}px, ${moveY / 2}px)`;
  }
</script>
