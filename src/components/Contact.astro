---
import i18next, { t } from "i18next";
import reviews from "../../public/json/reviews.json";
import Button from "./Button.astro";

const { blob } = Astro.props;

let lang = i18next.language;
let localizedReviews = reviews[lang];

const formattedReviews = localizedReviews.map((review) => {
  const name = review.name;
  const [firstWord, ...rest] = name.split(" ");
  const formattedName = `<span>${firstWord}</span><br><span class='ml-6'>${rest.join(" ")}</span>`;
  return { ...review, formattedName };
});
---

<div
  class="w-[90%] sm:w-full md:mt-52 mt-20 md:max-w-[1100px] flex md:flex-row flex-col items-center md:gap-56 gap-20"
>
  <img
    src="/img/blob-1.webp"
    alt=""
    class={`slideup ${blob ? "visible" : "hidden"} -translate-x-36 -translate-y-20 sm:-translate-x-0 sm:translate-y-0 w-[600px] z-0 absolute`}
  />
  <div class="slideup w-full md:w-[calc(100%-13rem)] z-10 relative">
    <h1 class="m-0 md:text-8xl text-6xl text-white">{t("header.contact")}</h1>
    <p class="mb-3 leading-7">
      {t("contact.catch")}
    </p>
    <p class="mt-6 flex flex-row items-center gap-1">
      <Button
        externalhref="mailto:hola@bcn.am"
        icon="https://unpkg.com/pixelarticons@1.8.1/svg/mail.svg"
        text="hola@bcn.am"
      />
    </p>
  </div>
  <div
    class="slideup w-full md:w-[500px] h-[250px] flex flex-row items-start z-10 relative"
  >
    <div class="top-0 right-0 flex flex-row items-center gap-1 z-10 absolute">
      <button
        onclick="modifyReview(1)"
        class="border-2 border-transparent hover:border-white hover:scale-105 text-white transition-all"
      >
        <img
          src="https://unpkg.com/pixelarticons@1.8.1/svg/chevron-right.svg"
          class="h-8 brightness-200 invert"
          alt="Next Review"
        />
      </button>
    </div>
    {
      formattedReviews.map((review, index) => (
        <div
          class={`w-[500px] flex flex-col ${index != 0 ? "hidden absolute" : "relative"}`}
          id={`review-${index}`}
        >
          <div class="flex flex-row items-center gap-3">
            <img
              src={review.pfp}
              alt={`${review.name}'s profile picture`}
              class="h-32"
              style="aspect-ratio: 1/1;"
            />
            <div>
              <h3
                class="m-0 font-[MGNHumble]"
                set:html={review.formattedName}
              />
              <p class="text-[20px] font-light m-0 opacity-60 leading-tight">
                {review.career}
              </p>
            </div>
          </div>
          <p class="mt-6 flex flex-row items-start gap-1 leading-7">
            <img
              src="https://unpkg.com/pixelarticons@1.8.1/svg/chat.svg"
              class="mt-1 h-6 brightness-200 invert"
              style="transform: scaleX(-1);"
              alt="Quote Icon"
            />{" "}
            "{review.quote}"
          </p>
        </div>
      ))
    }
  </div>
</div>

<script is:inline>
  let currentReview = 0;

  function modifyReview(direction) {
    const reviews = document.querySelectorAll("[id^='review-']");
    const currentElement = reviews[currentReview];
    let slideOutClass = "slide-out-left";
    let slideInClass = "slide-in-right";

    if (direction < 0) {
      slideOutClass = "slide-out-right";
      slideInClass = "slide-in-left";
    }

    currentElement.classList.add(slideOutClass);
    currentElement.addEventListener(
      "animationend",
      () => {
        currentElement.classList.add("hidden");
        currentElement.classList.add("absolute");
        currentElement.classList.remove(slideOutClass);
      },
      { once: true }
    );

    currentReview += direction;
    if (currentReview < 0) {
      currentReview = reviews.length - 1;
    } else if (currentReview >= reviews.length) {
      currentReview = 0;
    }

    const nextElement = reviews[currentReview];
    nextElement.classList.remove("hidden");
    nextElement.classList.add(slideInClass);
    nextElement.addEventListener(
      "animationend",
      () => {
        nextElement.classList.remove("absolute");
        nextElement.classList.remove(slideInClass);
      },
      { once: true }
    );
  }
</script>

<style>
  .slideup {
    animation: auto linear slideupcontact both;
    animation-timeline: view();
  }

  .slideup:nth-child(1) {
    animation-range: cover 40% cover 90%;
  }

  .slideup:nth-child(2) {
    animation-range: cover 20% cover 50%;
  }

  @keyframes slideupcontact {
    0% {
      opacity: 0;
      transform: translateY(50px);
    }
    15% {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
